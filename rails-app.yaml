---
apiVersion: v1
kind: Namespace
metadata:
  name: rails-app
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: rails-app
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: rails-app
spec:
  clusterIP: None
  ports:
    - port: 5432
  selector:
    app: postgres
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: rails-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  serviceName: "postgres"
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:15-alpine
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: "myapp_development"
            - name: POSTGRES_USER
              value: "myuser"
            - name: POSTGRES_PASSWORD
              value: "password"
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
    - metadata:
        name: postgres-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: rails
  namespace: rails-app
spec:
  selector:
    app: rails
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rails
  namespace: rails-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rails
  template:
    metadata:
      labels:
        app: rails
    spec:
      containers:
        - name: rails
          image: myapp:latest  
          ports:
            - containerPort: 3000
          env:
            - name: DATABASE_HOST
              value: "postgres-0.postgres.rails-app.svc.cluster.local"
            - name: DATABASE_USERNAME
              value: "myuser"
            - name: DATABASE_PASSWORD
              value: "password"
      imagePullSecrets:
        - name: docker-hub-secret
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rails-ingress
  namespace: rails-app
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - host: rails.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: rails
                port:
                  number: 3000
                


